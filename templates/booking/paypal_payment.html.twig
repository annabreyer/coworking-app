{% extends 'base.html.twig' %}

{% block title %}{% endblock %}

{% block body %}

    <h1>{{ 'Booking'|trans }}</h1>
    You have made the following booking:

    <ul>
        <li>Room: {{ booking.room.name }}</li>
        <li>Date: {{ booking.businessDay.date|date('d.m.Y') }}</li>
        <li>Amount: {{ booking.amount / 100 }} EUR</li>
    </ul>

    {% for error in app.flashes('error') %}
        <div class="alert alert-danger" role="alert">{{ error }}</div>
    {% endfor %}

    {% for message in app.flashes('success') %}
        <div class="alert alert-success" role="alert">{{ message }}</div>
    {% endfor %}

    <div id="paypal-button-container" style="width: 300px"></div>
    <script src="https://www.paypal.com/sdk/js?{{ parameters|raw }}"></script>
    <script>
        paypal.Buttons({
            createOrder: (data, actions) => {
                return actions.order.create({
                    intent: 'authorize',  // authorize for capture via backend
                    purchase_units: [{
                        amount: {
                            value: {{ booking.amount / 100 }},
                        },
                        description: '{{ booking }}',
                        invoice_id: '{{ booking.invoice.number }}',
                    }],
                    application_context: {
                        brand_name: 'Ensemble Coworking Hahnheim',
                        shipping_preference: 'NO_SHIPPING' // if you handle shipping
                    }
                });
            },
            // Finalizes the transaction after payer approval
            onApprove: (data) => {
                //@todo Spinner while processing
                fetch('{{ path('booking_paypal_capture', {'uuid': booking.uuid}) }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        data: data
                    })
                }).then(function(response) {
                    return response.json();
                }).then(function(data) {
                    window.location.href = data.targetUrl;
            })},
            // The user closed the window
            onCancel: () => {
                console.log('The user canceled the payment');
            },
            onError: (err) => {
                console.log('Something went wrong', err);
            }
        }).render('#paypal-button-container');
    </script>
{% endblock %}